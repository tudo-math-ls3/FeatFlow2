//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : closed NURBS
//  @ File Name : GeomOps.h
//  @ Date : 22.06.2006
//  @ Author : Raphael Mï¿½nster
//
//


#if !defined(_GEOMOPS_H)
#define _GEOMOPS_H

#include <vector>
#include "vector2.h"
#include "vector3.h"

class GeomOps
{
public:

	inline int AreaSign(const VECTOR2& a, const VECTOR2& b, const VECTOR2& c)
	{
		double area2;

		area2 = ( b.x - a.x ) * (double)( c.y - a.y ) -
				( c.x - a.x ) * (double)( b.y - a.y );

		/* The area should be an integer. */
		if      ( area2 >  1e3 ) return  1;
		else if ( area2 < -1e3 ) return -1;
		else                     return  0;

	}

	inline bool Left(const VECTOR2& a, const VECTOR2& b, const VECTOR2& c)
	{
		return  AreaSign( a, b, c ) > 0;
	}

	inline bool LeftOn(const VECTOR2& a, const VECTOR2& b, const VECTOR2& c)
	{
		return  AreaSign( a, b, c ) >= 0;
	}

	inline bool Collinear(VECTOR2& a, VECTOR2& b, VECTOR2& c)
	{
		return  AreaSign( a, b, c ) == 0;
	}

	inline bool Between(VECTOR2& a, VECTOR2& b, VECTOR2& c)
	{
	VECTOR2 ba, ca;

	if ( ! Collinear( a, b, c ) )
		return  false;

	/* If ab not vertical, check betweenness on x; else on y. */
	if ( a.x != b.x ) 
		return ((a.x <= c.x) && (c.x <= b.x)) ||
				((a.x >= c.x) && (c.x >= b.x));
	else
		return ((a.y <= c.y) && (c.y <= b.y)) ||
				((a.y >= c.y) && (c.y >= b.y));

	}

};

#endif  //_GEOMOPS_H
