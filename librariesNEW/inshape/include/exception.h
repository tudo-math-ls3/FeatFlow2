//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : cException.h
//  @ Date : 31.08.2006
//  @ Author : Raphael Münster
//
//


#if !defined(_CEXCEPTION_H)
#define _CEXCEPTION_H

#include<iostream>
#include<string>


using namespace std;

class cException
{
public:
	
	/* member functions */
	cException(string strFile, unsigned int iLine, string strError);
	virtual void writeMessage();
	string getErrorString(){ return m_strError; }
	string getFileString(){ return m_strFile; }
	int    getLine(){ return m_iLine; }
	
protected:	
	/* member variables */
	string m_strError;
	string m_strFile;
	unsigned int m_iLine;
};

/* macro to easily throw an exception */
#define EXCEPTION(errorString) throw cException((string)__FILE__,(unsigned int)__LINE__,(string)errorString)

/* Invalid knot span exception is thrown when a parameter value is found in an invalid knot span */
class cKnotSpanException : public cException
{
public:
	/* member function */
	cKnotSpanException(string strFile, unsigned int iLine, string strError, double dinvalidValue);
	void writeMessage();
	/* member variables */
	double m_dinvalidValue;
};

#define KSEXCEPTION(errorString, val) throw cKnotSpanException((string)__FILE__,(unsigned int)__LINE__,(string)errorString,(double)val);

#endif  //_CEXCEPTION_H
