# -*- mode: any-ini; -*-

################################################################################
# This file defines the sceleton of a single grid defect correction solver     #
#                                                                              #
# The solver structures are as follows:                                        #
# * FullMultigridSolver (to define global refinement level NLEV)               #
# * NonlinearSolver (defect correction loop)                                   #
# * LinearSolver (UMFPACK)                                                     #
# * LinearPrecond (ILU)                                                        #
################################################################################

################################################################################
[FullMultigridSolver]
################################################################################

# minimum multigrid level number
nlmin = %{FullMultigridSolver.nlev}

# maximum multigrid level number
nlmax = %{FullMultigridSolver.nlev}

# nonlinear subsolver
# 1 = nonlinear single-grid solver
# 3 = nonlinear multigrid solver
isolver = 1

# name of the subsolver
ssolvername = NonlinearSolver

################################################################################
[NonlinearSolver]
################################################################################

# preconditioner for the nonlinear solver
# 1 = block-diagonal preconditioner
# 2 = defect-correction algorithm
# 3 = algebraic Newton algorithm
iprecond = 2

# nonlinear solver
# 101 = fixed-point iteration
# 102 = predictor-corrector fixed-point iteration
isolver = 101

# strategy for choosing the perturbation parameter in Newton's method
# 1 = NITSOL
# 2 = SQRT(EPS)
# otherwise, user-defined value
dperturbationStrategy = 0.0

# strategy for choosing the forcing term in Newton's method
# 1 = choice 1 by Eisenstat/Walker
# 2 = choice 2 by Eisenstat/Walker
# 3 = choice by Brown/Saad
# 4 = choice by Dembo/Steihaug
# otherwise, user-defined fixed value
dforcingStrategy = 0.0

# check sufficient decrease condition in globalisation
# 0 = apply Newton increment without globalisation
# 1 = check sufficient decrease condition and perform backtracking if required
icheckSufficientDecrease = 0

# maximum number of backtracking steps
nmaxBacktrackingSteps = 0

# update frequency of Jacobian
iupdateFrequency = 0

# name of linear sub-solver
ssolvername = LinearSolver

################################################################################
[LinearSolver]
################################################################################

# type of linear solver
#  2 = Jacobi
#  4 = SOR
#  5 = SSOR
#  7 = BiCGSTAB
#  8 = FGMRES
# 11 = UMFPACK4
isolver = 11

# dimension of the Krylov subspace for FGMRES method
nkrylov = 25

# name of preconditioner
sprecondName = LinearPrecond

################################################################################
[LinearPrecond]
################################################################################

# preconditioner for the linear single-grid solver
#  2 = Jacobi
#  4 = SOR
#  5 = SSOR
# 50 = ILU
isolver = 50

# tolerance of (M)ILU-preconditioner
depsILU = 1e-12

# size of fill-in for (M)ILU(s)
ifill = 0

# (M)ILU(s) relaxation
domega = 1.0