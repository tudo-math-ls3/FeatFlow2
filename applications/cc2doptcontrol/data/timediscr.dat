# ------------------------------------------------------------------------
# Time discretization
# 
# This file contains parameters configuring the time discretization
# of the problem.
# ------------------------------------------------------------------------

#####################
[TIME-DISCRETISATION]
#####################

# Type of problem (ISTAT): 0=steady,1=nonsteady

itimedependence = 1                       # ISTAT

# ----------------------------------------------------------------------

# Absolute start time of the simulation (TIMENS)

dtimeInit = 0.0                           # TIMENS

# Max. absolute time of the simulation (TIMEMX); simulation stops if 
# time > dtimemax or #iterations > niterations

dtimeMax = 1.0 1.0                           # TIMEMX

# ----------------------------------------------------------------------

# Number of time steps on time level 1.
# Must be >= 2 for everything except implicit Euler!

niterations = 2                          # NITNS

# Minimum level in time.
TIMENLMIN = 1

# Maximum level in time. The calculation is done on this time
# level combined with the maximum space level NLMAX.
TIMENLMAX = 5 # 5

# ----------------------------------------------------------------------

# Time-stepping scheme;
# 0=one step scheme
# 2=dG(0)

ctimeStepScheme = 0                       # IFRSTP

# parameter for one step scheme (THETA) if itimeStepScheme=0;
# =0:Forward Euler(instable), =1: Backward Euler, =0.5: Crank-Nicolson

dtimeStepTheta = 1.0                      # THETA

# ----------------------------------------------------------------------

#############
[TIME-SOLVER]
#############

# Type of space-time solver to use.
# 0 = Direct linear solver, only for testing purposes.
# 1 = Nonlinear defect correction loop, preconditioned with a
#     1-level Defect correction for linear subproblems. 
#     The configuration of the Defect correction solver for the linear
#     subproblems can be found in the section TIME-DEFCORR below.
# 2 = Nonlinear defect correction loop, preconditioned with a
#     Space time Multigrid for linear subproblems. The configuration of 
#     the space-time multigrid solver can be found in the section 
#     TIME-MULTIGRID below.

cspaceTimeSolverType = 2

# Type of preconditioner to use in every timestep, = type of linear
# subproblem to solve in the nonlinear space time defect correction loop.
# =1: Preconditioning by solving the standard system.
# =2: Preconditioning by Newton-Iteration.
#     This is a combination of a linear solver (itypePreconditioning=1)
#     in conjunction with an extended matrix to improve convergence speed
#     (at the cost of assembly time and stability of the linear solver/
#     preconditioner).

ctypePreconditioner = 1

# Minimum number of steps

nminIterations     = 1

# Maximum number of steps
      
nmaxIterations     = 1 0 0 10

# Damping of residuals, i.e. reduction of relative error 
# on finest grid; smaller -> more iterations

depsRel            = 1E-15 2 10 2 5 1E-8 0.001

# Limit for residuals, i.e. absolute error on finest grid; 
# The linear solver stops if both, absolute error < depsAbs and 
# rel. error < depsRel

depsAbs            = 1E-0 0.001

# General damping parameter when adding the preconditioned defect
# to the solution in the nonlinear space-time iteration

domega             = 1.0

# Output level of the solver

ioutputLevel       = 0 3

#####################
[TIME-POSTPROCESSING]
#####################

# Filename prefix for GMV output.

sgmvFileName = 'gmv/u3_1.gmv'

##############
[TIME-DEFCORR]
##############

# This section configures the space-time defect correction solver
# which is activated by ispaceTimeSolverType=0.

# If itypePreconditioning = 1 or = 2 or =3: Name of the section in the file 
# "linsol_cc2d.ini" that configures the linear solver to use for
# preconditioning.

slinearSolver        = 'CC-MULTIGRID'

# Minimum number of iterations
nminIterations = 1

# Maximum number of iterations
nmaxIterations = 10

# Damping of residuals, i.e. reduction of relative error 
# on finest grid; smaller -> more iterations

depsRel            = 1E-10 1E-7

# Limit for residuals, i.e. absolute error on finest grid; 
# The solver stops if both, absolute error < depsAbs and 
# rel. error < depsRel

depsAbs            = 1E-5

################
[TIME-MULTIGRID]
################

# This section configures the space-time multigrid solver
# which is activated by ispaceTimeSolverType=1.

# Whether space levels are coupled to time levels.
# =0: MG only in time: Space level NLMAX is used on all time levels.
# =1: MG in time and space: Space level NLMAX-i = Time level TIMENLMAX-i
# =2: MG only in space: Time level TIMENLMAX-i has the same number of time 
#     steps as time level TIMENLMAX, but uses space level NLMAX-i
ispacelevelcoupledtotimelevel = 1

# Minimum number of time-MG sweeps per nonlinear time-iteration
nminIterations = 1

# Maximum number of time-MG sweeps per nonlinear time-iteration
nmaxIterations = 100 00

# Damping of residuals, i.e. reduction of relative error 
# on finest grid; smaller -> more iterations

depsRel            = 1E-8 2 1E-7

# Limit for residuals, i.e. absolute error on finest grid; 
# The linear solver stops if both, absolute error < depsAbs and 
# rel. error < depsRel

depsAbs            = 1E-15

# Type of stopping criterion.
# =0: Relative AND absolute stopping criterion must hold.
# =1: Relative OR absolute stopping criterion must hold.

istoppingCriterion = 1

# Output level of the solver

ioutputLevel       = 3

# Cycle. 0=F-cycle, 1=V-cycle, 2=W-cycle

icycle = 1

# Minimum value for the adaptive coarse grid correction.
# Note: dalphamin=dalphamax deactivates adaptive coarse grid correction!
# Standard = 1.0

dalphamin = 1.0

# Minimum value for the adaptive coarse grid correction.
# Note: dalphamin=dalphamax deactivates adaptive coarse grid correction!
# Standard = 1.0

dalphamax = 1.0

###############
[TIME-SMOOTHER]
###############

# Type of space-time smoother.
# =0: Block Jacobi
# =1: Block SOR (domegaPrecond)
# =2: Block Forward-Backward Gauss-Seidel (damped)
# =3: CG (Jacobi)
# =4: CG (Forward-Backward Gauss-Seidel)
# =6: Defect correction with UMFPACK preconditioning
cspaceTimeSmoother = 0 0 6

# Damping parameter
domega = 0.7 0.5 0.7

# Damping parameter of a precondirtioner; only used for cascaded solvers
# (e.g. CG(...)) or SOR
domegaPrecond = 1.0

# Number of smoothing steps
nsmSteps = 4

# Switch smoothing on/off.
# =1: do smoothing as pre- and/or postsmoother, respectively.
# =0: don't do smoothing as pre- and/or postsmoother, respectively.
ipresmoothing = 0
ipostsmoothing = 1

# Output level of the smoother

ioutputLevel = 2

# If itypePreconditioning = 1 or = 2: Name of the section in the file 
# "linsol_cc2d.ini" that configures the linear solver to use for
# preconditioning.

slinearSolver        = 'CC-MULTIGRID'


#######################
[TIME-COARSEGRIDSOLVER]
#######################

# Type of coarse grid solver.
# =0: Iterative Block Jacobi.
# =1: Iterative Block SOR(domegaPrecond)
# =2: Iterative Block Forward-Backward Gauss-Seidel
# =3: Iterative CG
# =4: direct (UMFPACK Gauss elimination)
# =5: Iterative BiCGStab with Block Forward-Backward Gauss-Seidel
# =6: Defect correction with UMFPACK preconditioning
ctypeCoarseGridSolver = 5 4 0 2 5 4

# Minimum number of time-iterations on the coarsest time-mesh
nminIterations = 3

# Maximum number of time-iterations on the coarsest time-mesh
nmaxIterations = 100 20

# Damping parameter
domega = 0.7 1.0 1.0

# Damping parameter of a preconditioner; only used for cascaded solvers
# (e.g. CG(...)) or SOR
domegaPrecond = 1.0 0.7 1.0

# Damping of residuals, i.e. reduction of relative error 
# on finest grid; smaller -> more iterations

depsRel            = 1E-13 3 1E-10 

# Limit for residuals, i.e. absolute error on finest grid; 
# The linear solver stops if both, absolute error < depsAbs and 
# rel. error < depsRel

depsAbs            = 1E-13 13 5

# Maximum relative residual before the iteration is treated as 'divergent'

ddivRel            = 1E20

# Output level of the solver

ioutputLevel = 3

# Type of stopping criterion.
# =0: Relative AND absolute stopping criterion must hold.
# =1: Relative OR absolute stopping criterion must hold.

istoppingCriterion = 1

# If itypePreconditioning = 1 or = 2: Name of the section in the file 
# "linsol_cc2d.ini" that configures the linear solver to use for
# preconditioning.

slinearSolver        = 'CC-MULTIGRID'

