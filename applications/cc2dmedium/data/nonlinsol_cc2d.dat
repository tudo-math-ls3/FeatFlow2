# ------------------------------------------------------------------------
# Stationary nonlinear solver
#
# This file contains parameters configuring the (stationary)
# nonlinear solver of CCxD type solver.
# ------------------------------------------------------------------------

################
[CC2D-NONLINEAR]
################

# minimum number of nonlinear iterations; 
# in nonstationary simulations: per time step; 
# 1=standard
# Former NLMIN.

nminIterations     = 1

# max number of nonlinear iterations; 
# in nonstationary simulations: per time step.
# Former NLMAX

nmaxIterations     = 10

# (absolute) limit for U-defects, standard = 1.0E-5

depsD              = 1.0E-10

# (absolute) limit for DIV-defects, standard = 1.0E-5

depsDiv            = 1.0E-5

# limit for U-changes, standard = 1.0E-5

depsUR             = 1.0E-5

# limit for P-changes, standard = 1.0E-5

depsPR             = 1.0E-5

# (relative) limit for defect improvement

dDampingD          = 1.0E-1

# Output level of the nonlinear solver

ioutputLevel       = 2

# ------------------------------------------------------------------------
# Preconditioner in nonlinear defect correction

# Type of preconditioner to use in nonlinear defect correction.
# =0: Preconditioning with inverse mass matrix (not yet implemented).
# =1: Preconditioning by defect correction loop, using a linear solver
#     to solve the linearised system.
# =2: Preconditioning by Newton-Iteration (not yet implemented).
#     This is a combination of a linear solver (itypePreconditioning=1)
#     in conjunction with an extended matrix to improve convergence speed
#     (at the cost of assembly time).

itypePreconditioning = 1

# If itypePreconditioning = 1 or = 2: Name of the section in the file 
# "linsol_cc2d.ini" that configures the linear solver to use for
# preconditioning.

slinearSolver        = 'CC-MULTIGRID'

# If itypePreconditioning = 2: Name of the section that controls the
# assembly of the Newton matrices and the use of the Newton iteration.

spreconditionerNewton = 'CC-NEWTONITERATION'

# ------------------------------------------------------------------------
# Upper and lower bound for optimal damping parameter in nonlinear
# defect correction. Set domegaMin=domegaMax=1.0 for no damping.

# lower limit for opt. OMEGA in nonlinear defect correction, 
# <0: no rel. changes

domegaMin          = 0.0 1.0 0.0

# upper limit for opt. OMEGA in nonlinear defect correction,
# <0: no rel. changes

domegaMax          = 2.0 1.0 2.0

# initial value limit for opt. OMEGA in nonlinear defect correction

domegaIni          = 1.0


# ========================================================================
# The following section describes the parameters of the Newton iteration.
# For the use of Newton, an extended matrix must be generated.
# Furthermore, a combination of Newton and the usual defect correction
# approach can be configured here, as Newton may fail if the current
# iterate of the nonlinear solver is 'too far away' from the solution-

####################
[CC-NEWTONITERATION]
####################

