# -----------------------------------------------------------#
# In this file we specify the functions and the
# quadrature rule that we want to use for it

# This applies to section "FIRST" and "SECOND"

# Type of element pair that was used for the discretisation
#  0 = Q1~(E031) / Q1~(E031) / Q0
#  1 = Q1~(E030) / Q1~(E030) / Q0
#  2 = Q1~(EM31) / Q1~(EM31) / Q0
#  3 = Q1~(EM30) / Q1~(EM30) / Q0 = standard
#  4 = Q2 (E013) / Q2 (E013) / QP1
#  5 = Q1~(EM30) / Q1~(EM30) / Q0 unpivoted (much faster than 3 but less stable)
#  6 = Q1~(EM30) / Q1~(EM30) / Q0 unscaled (slightly faster than 3 but less stable)
#  7 = Q1~(EN30) / Q1~(EN30) / Q0 (nonparametric, new interface implementation of 3)
#  8 = Q1~(EB30) / Q1~(EB30) / Q0 (experimental, works only with NLMIN=NLMAX and general VANKA/UMFPACK)
# 10 = Q2~(EB50) / Q2~(EB50) / QP1
# 11 = Q2~(EM50) / Q2~(EM50) / QP1
# 12 = Q2 (E013) / Q2 (E013) / QP1 (nonparametric)
# 13 = Q2 (E013) / Q2 (E013) / QP1 (nonparametric, solves local system; slower than 12 but more stable)
# 14 = Q1~(EB30) / Q1~(EB30) / QP1 (parametric, experimental)
# 15 = Q1~(EB30) / Q1~(EB30) / QP1 (nonparametric, experimental)
# 20 = Q1        / Q1        / Q1 (unstabilised!)
# 30 = P1~(E020) / P1~(E020) / P0
# 50 = Q2~(EN50) / Q2~(EN50) / QP1 (nonparametric velocity + pressure)
# 51 = Q3~(EN51) / Q3~(EN51) / QP2 (nonparametric velocity + pressure)

# (EM30 = nonparametric, nonconformal Rannacher-Turek element)
# (EB30 = parametric, nonconformal Rannacher-Turek element with bubble)
# (QP1  = Quadrilateral discontinuous P1 element)
# (E020 = non-conforming Crouzeix-Raviart element)
#
#
# NLMIN: Level where the mesh was generated
# NLMAX: Level where the solution was calculated
#
# sParametrisation: The prm-file for the mesh
# sMesh: The tri-file for the mesh
# sVector: The solution-vector of the system you solved!
#          Important: It has to be formatted! (not-formatted will come at some time)
#          Important: We assume that the first unknowns are the velocity and the last one
#                     is the pressure (which is standart in Featflow2).
# sCubFormula: Specifies, which cubature formula is used to calculate the norm.
#  the one set in the section  "FIRST" is used to calculate ||u1|| and ||u1 - u2||
#  the one set in the section "SECOND" is used to calculate ||u2||
#
# 
# Important: For the calculation of ||u1 - u2||_L2 the program needs to evaluate
# u2 at the cubature points of the geometry that belongs to u1 since
# it uses the geometry belonging to u1 to perform the integration
# Keep in mind that this can take some time because we need to find the points in the
# mesh first. 
# You also need to keep in mind that this has an effect on the value of the integral,
# it will lead to different results if you exchange u1 and u2, so in general
# we have that ||u1 - u2|| != ||u2 - u1||

#####
[FIRST]
#####

NLMIN=1
NLMAX=4
ielementType=3

sParametrisation = '%{spredirectory}/bench1.prm'
sMesh = '%{spredirectory}/bench1.tri'

sVector='%{ssolutiondirectory}/solution_bench1_elementtype3_NLMIN1_NLMAX4.dat'

sCubFormula = AUTO_G2

#######
[SECOND]
#######

NLMIN=1
NLMAX=4
ielementType=3

sParametrisation = '%{spredirectory}/bench1.prm'
sMesh = '%{spredirectory}/bench1.tri'

sVector='%{ssolutiondirectory}/solution_bench1_elementtype3_NLMIN1_NLMAX4.dat'

sCubFormula =  AUTO_G2