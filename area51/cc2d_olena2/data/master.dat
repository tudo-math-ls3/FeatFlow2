# -------------------------------------------------------------------
# This optional master file is the entry point for all data
# which is processed by the software. The simportdatafiles(.) parameter
# below defines a list of 'child' data files which are read during
# the initialisation. All parameters and sections following
# this parameter overwrite data from the DAT files; this allows
# to centrally define crucial parameters in numeric tests while
# the data files specify the general setting.
#
# If simportdatafiles(.) is not present as first parameter in this
# file, all parameters of the software must be defined here. This
# allows to collect all parameters in one file.
#
# If this file is missing, the software will search for parameters in
# a standard set of data files.
# -------------------------------------------------------------------

# In the following we define some basic directories that can be used
# in all sub-data-files as path specifications for input/output
# files. This allows to run the application in a benchmark
# environment with different settings

# Directory of the application
sappdirectory = .

# Directory with data files
sdatadirectory = %{sappdirectory}/data

# Directory for log files
slogdirectory = %{sappdirectory}/log

# Directory for visualisation files
spostdirectory = %{sappdirectory}/gmv

# Directory containing/receiving plain solution files
ssolutiondirectory = %{sappdirectory}/ns

# Directory for preprocessing files
spredirectory = %{sappdirectory}/pre

# The following defines a list of data files to read. The files may optionally
# contain a path specification. If no path os specified, the files
# are searched for in the same subdirectory as the master.dat.
# By default, we specify the sdatadirectory variable here as path specifier.

simportdatafiles(8) = 
  "%{sdatadirectory}/discretisation.dat"
  "%{sdatadirectory}/linsol_cc2d.dat"
  "%{sdatadirectory}/nonlinsol_cc2d.dat"
  "%{sdatadirectory}/output.dat"
  "%{sdatadirectory}/paramtriang.dat"
  "%{sdatadirectory}/bdconditions.dat"
  "%{sdatadirectory}/timediscr.dat"
  "%{sdatadirectory}/postprocessing.dat"
  
# From this point on, it's possible to additionally define 'alternative'
# parameter settings that overwrite settings in the DAT files. The
# parameters here must be introduced by the corresponding section
# to be overwritten. You can for example define:
#
# [CC-DISCRETISATION]
# NLMIN = 1
# NLMAX = 3
# RE = 1000
#
# which will overwrite the three parameters NLMIN, NLMAX and RE
# from the original set of DAT files read in simportdatafiles.

[BDEXPRESSIONS]
bdExpressions(3) =
  'SOLU1'     -1    'TIME*X^2'
  'SOLU2'     -1    'TIME*Y^2'
  'SOLC'      -1    'TIME*(X^2+Y^2)'
  
[BDCONDITIONS]
ineumannBoundary = 1

bdComponent1(1)=
   4.0  3  1  'SOLU1' 'SOLU2' 'SOLC'

[PARAMTRIANG]
sParametrisation = '%{spredirectory}/QUAD.prm'
sMesh = '%{spredirectory}/QUAD.tri'

[CC-DISCRETISATION]
NLMAX = 5
RE = 1
ielementType = 4
iequation    = 1

[CC-CONCENTREQUATION]
ddiffusionWeight = 1.0
dconvectionWeight = 1.0
dconvectionBeta1 = 0.0
dconvectionBeta2 = 0.0
dreactionWeight = 1.0
dmuWeight = 1.0
dkappaWeight = 1.0

[TIME-DISCRETISATION]
itimedependence = 0
niterations = 10000                  
dtimeInit = 0.0
dtimeMax = 20.0                
dtimeStep = 1.0
dtimeStepTheta = 1.0

[CC-POSTPROCESSING]
ierrorAnalysisL2 = 0

[CC2D-NONLINEAR]
depsD              = 1.0E-13
depsDiv            = 1.0E-13
depsC              = 1.0E-13
nmaxIterations     = 20
