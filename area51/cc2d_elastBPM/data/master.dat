# -------------------------------------------------------------------
# This optional master file is the entry point for all data
# which is processed by the software. The simportdatafiles(.) parameter
# below defines a list of 'child' data files which are read during
# the initialisation. All parameters and sections following
# this parameter overwrite data from the DAT files; this allows
# to centrally define crucial parameters in numeric tests while
# the data files specify the general setting.
#
# If simportdatafiles(.) is not present as first parameter in this
# file, all parameters of the software must be defined here. This
# allows to collect all parameters in one file.
#
# If this file is missing, the software will search for parameters in
# a standard set of data files.
# -------------------------------------------------------------------

# In the following we define some basic directories that can be used
# in all sub-data-files as path specifications for input/output
# files. This allows to run the application in a benchmark
# environment with different settings

# Directory of the application
sappdirectory = .

# Directory with data files
sdatadirectory = %{sappdirectory}/data

# Directory for log files
slogdirectory = %{sappdirectory}/log

# Directory for visualisation files
spostdirectory = %{sappdirectory}/gmv

# Directory containing/receiving plain solution files
ssolutiondirectory = %{sappdirectory}/ns

# Directory for preprocessing files
spredirectory = %{sappdirectory}/pre

# The following defines a list of data files to read. The files may optionally
# contain a path specification. If no path os specified, the files
# are searched for in the same subdirectory as the master.dat.
# By default, we specify the sdatadirectory variable here as path specifier.

simportdatafiles(8) = 
  "%{sdatadirectory}/discretisation.dat"
  "%{sdatadirectory}/linsol_cc2d.dat"
  "%{sdatadirectory}/nonlinsol_cc2d.dat"
  "%{sdatadirectory}/output.dat"
  "%{sdatadirectory}/paramtriang.dat"
  "%{sdatadirectory}/bdconditions.dat"
  "%{sdatadirectory}/timediscr.dat"
  "%{sdatadirectory}/postprocessing.dat"
  
# From this point on, it's possible to additionally define 'alternative'
# parameter settings that overwrite settings in the DAT files. The
# parameters here must be introduced by the corresponding section
# to be overwritten. You can for example define:
###############
[GENERALOUTPUT]
###############
smsgLog = '%{slogdirectory}/output.log'
#####################
 [CC-DISCRETISATION]
#####################
iMass= 1
iMassLumpType= 0 
 NLMIN = 1
 NLMAX =2
 RE = 1
 lambda = 1
 mu = 1
 nSo = 0
 nFo = 1
 rhoFR = 1
 rhoSR = 1
ctypeInitialSolution = 3
ielementType = 4
#################
[CC-LINEARSOLVER]
#################
isolverType = 1
ismootherType = 1
icoarseGridSolverType = 0
####################
[CC-MULTIGRIDSOLVER]
####################
nmaxIterations     = 20
depsRel            = 1E-10
#####################
[TIME-DISCRETISATION]
#####################
itimedependence = 1                      # ISTAT
dtimeInit = 0.0 
dtimeMax  = 1E3
dtimeStep = 1E0
dtimeStepTheta = 1
dminTimeDerivative = 1.0E-5
ipressureFullyImplicit = 1
################
[CC2D-NONLINEAR]
################
nmaxIterations     = 16
depsD_u     = 1.0E-8
depsD_vS    = 1.0E-8
depsD_vF    = 1.0E-8
depsDiv     = 1.0E-8
depsUR      = 1.0E-8
depsVSR     = 1.0E-8
depsVFR     = 1.0E-8
depsPR      = 1.0E-8
###################
[CC-POSTPROCESSING]
###################
ioutputUCD = 1
#############
[PARAMTRIANG]
#############
sParametrisation = '%{spredirectory}/QUAD.prm'
sMesh = '%{spredirectory}/QUAD.tri'
##############
[BDCONDITIONS]
##############
bdComponent1(1)=
   4.0  3  1  'AnalyticBC' 'AnalyticBC' 'AnalyticBC' 'AnalyticBC' 'AnalyticBC' 'AnalyticBC'

