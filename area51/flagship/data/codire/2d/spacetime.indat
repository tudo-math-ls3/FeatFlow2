# -*- mode: sh; -*-

#
# Input data for Convection of a step function benchmark
#

# Specify the initial solution by logical expressions and solution values
[initial_solution]
NCOMP
1
if(ABS(x-0.5*y-0.2)<=0.15, 1, 0)
#if(ABS(x-0.5*y-0.2)<=0.15, 1-ABS(x-0.2-0.5*y)/0.15, 0)
#if(ABS(x-0.5*y-0.2)<=0.15, SQRT(1-((x-0.5*y-0.2)/0.15)^2), 0)

[exact_solution]
NCOMP
1
if(ABS(x-0.5*y-0.2)<=0.15, 1, 0)
#if(ABS(x-0.5*y-0.2)<=0.15, 1-ABS(x-0.2-0.5*y)/0.15, 0)
#if(ABS(x-0.5*y-0.2)<=0.15, SQRT(1-((x-0.5*y-0.2)/0.15)^2), 0)

# Specify the initial velocity by logical expressions and solution values
[initial_velocity]
NCOMP
2
0.5
1.0


# Specify the boundary conditions for the primal problem
# 1. The first item of the parameter section always contains 
#    the right value of the boundary interval.
# 2. The second item defines whether the right endpoint belongs 
#    to the interval (ieptyp=1) or no (ieptyp=0)
# 3. The third item defines the boundary type: 
#    Neumann boundary condition   ibctyp = 0
#    Dirichlet boundary condition ibctyp = 1
[boundary_conditions_primal]
NBCT
1
NEXPR
1
IBCT
1
NCOMP
4
PARAMETERS
1.05  F  1   0.0
1.35  T  1   '1.0' 'SQRT(1-((x-0.2)/0.15)^2)'
2.0   F  1   0.0
4.0   F  0

# Specify the boundary conditions for the primal problem
[boundary_conditions_dual]
NBCT
1
NEXPR
1
IBCT
1
NCOMP
1
PARAMETERS
4.0  T  1   0.0
