#!/usr/bin/env gmake
## -*- makefile -*-

########################################################################
# This file contains compiler settings for CPUID: x86
########################################################################

# Standard compiler settings for pc systems
ifeq ($(call match,$(ID),pc-*),yes)
CC=gcc	     
FC=g95
OPTFLAGS  = -O3 -m32 -ffast-math -fexpensive-optimizations
FCFLAGS   = -pipe -fmod=$(MODDIR)
CCFLAGS   = -pipe
BLASLIB   = 
LAPACKLIB = 
GENERIC   = 1
endif

########################################################################
# AMD /w GNU compiler
########################################################################

ifeq ($(call match,$(ID),pc-(k.|athlon.?.?|opteron)-(linux|cygwin_nt?.?)),yes)
CC=gcc
FC=g95
OPTFLAGS  = -O3 -m32 -ffast-math -fexpensive-optimizations
FCFLAGS   = -pipe -fmod=$(MODDIR)
CCFLAGS   = -pipe
BLASLIB   = 
LAPACKLIB = 
GENERIC   = 0

# Try to find more sophisticated compiler settings

ifeq ($(CPU),k6)
OPTFLAGS  += -fomit-frame-pointer -funroll-loops -fprefetch-loop-arrays
ifeq ($(CORE),k6)
FCFLAGS   += -march=k6
FCFLAGS   += -march=k6
endif
ifeq ($(CORE),k6-2)
FCFLAGS   += -march=k6-2
FCFLAGS   += -march=k6-2
endif
ifeq ($(CORE),k6-3)
FCFLAGS   += -march=k6-3
FCFLAGS   += -march=k6-3
endif
endif

ifeq ($(CPU),athlon)
OPTFLAGS  += -fomit-frame-pointer -funroll-loops -fprefetch-loop-arrays
FCFLAGS   += -march=athlon
FCFLAGS   += -march=athlon
endif

ifeq ($(CPU),athlonxp)
OPTFLAGS  += -fomit-frame-pointer -funroll-loops -fprefetch-loop-arrays
FCFLAGS   += -march=athlon-xp
FCFLAGS   += -march=athlon-xp
endif

ifeq ($(CPU),athlon64)
OPTFLAGS  += -mmmx -msse -msse2 -m3dnow -ffinite-math-only -fgcse \
-floop-optimize -fmove-all-movables -foptimize-register-move \
-foptimize-sibling-calls -frename-registers -freorder-blocks \
-fomit-frame-pointer -funroll-loops -fprefetch-loop-arrays \
-fsched-interblock -frerun-loop-opt -frerun-cse-after-loop \
-freorder-functions
FCFLAGS   += -march=athlon64
FCFLAGS   += -march=athlon64
endif

ifeq ($(CPU),opteron)
OPTFLAGS  += -mmmx -msse -msse2 -m3dnow -mfpmath=sse  -fomit-frame-pointer \
-funroll-loops -fprefetch-loop-arrays -ffinite-math-only -fgcse -floop-optimize \
-foptimize-register-move -foptimize-sibling-calls -frename-registers -freorder-blocks \
-fomit-frame-pointer -funroll-loops -fprefetch-loop-arrays -fsched-interblock \
-frerun-loop-opt -frerun-cse-after-loop -freorder-functions
FCFLAGS   += -march=opteron
FCFLAGS   += -march=opteron
endif
endif

########################################################################
# AMD /w Intel compiler
########################################################################

ifeq ($(call match,$(ID),pc-(athlon.?.?|athlon|opteron)-(linux|cygwin_nt?.?)-ifc),yes)
CC=icc
FC=ifort
AR=xiar
OPTFLAGS  = -O3 -ipo
FCFLAGS   = -cm -fpe0 -vec-report0 -module $(MODDIR)
CCFLAGS   = -vec-report0
LDFLAGS   = -lsvml
BLASLIB   = 
LAPACKLIB = 
GENERIC   = 0

# Try to find more sophisticated compiler settings
ifeq ($(CPU),athlon)
OPTFLAGS  += -tpp6
endif

ifeq ($(CPU),athlonxp)
OPTFLAGS  += -tpp6 -arch=sse
endif

ifeq ($(CPU),athlon64)
OPTFLAGS  += -tpp7 -xW -us -pad -funroll-loops
endif

ifeq ($(CPU),opteron)
OPTFLAGS  += -mtune=pentiumpro -march=pentium4
FCFLAGS   += 
endif
endif

########################################################################
# AMD /w PGI compiler
########################################################################

ifeq ($(call match,$(ID),pc-(k.?|athlon.?.?|opteron)-(linux|cygwin_nt?.?)-pgi),yes)
CC=gcc
FC=pgf90
OPTFLAGS  = -fastsse -O4 
FCFLAGS   = -module $(MODDIR)
BLASLIB   = 
LAPACKLIB = 
GENERIC   = 0

# Try to find more sophisticated compiler settings
ifeq ($(CPU),athlonxp)
FCFLAGS   += -tp athlonxp
endif
endif


########################################################################
# Intel /w GNU compiler
########################################################################

ifeq ($(call match,$(ID),pc-(pentium?.?|core?.?)-(linux|cygwin_nt?.?)),yes)
CC=gcc
FC=g95
OPTFLAGS  = -O3 -m32 -ffast-math -fexpensive-optimizations -fprefetch-loop-arrays
FCFLAGS   = -pipe -fmod=$(MODDIR)
CCFLAGS   = -pipe
BLASLIB   = 
LAPACKLIB = 
GENERIC   = 0

# Try to find more sophisticated compiler settings
ifeq ($(CPU),pentium)
OPTFLAGS  += -mfpmath=sse
FCFLAGS   += -march=pentium
CCFLAGS   += -march=pentium
endif

ifeq ($(CPU),pentiumpro)
OPTFLAGS  += -mfpmath=sse
FCFLAGS   += -march=pentiumpro
CCFLAGS   += -march=pentiumpro
endif

ifeq ($(CPU),pentium2)
OPTFLAGS  += -mfpmath=sse
FCFLAGS   += -march=pentium2
CCFLAGS   += -march=pentium2
endif

ifeq ($(CPU),pentium3)
OPTFLAGS  += -mfpmath=mmx -mfpmath=sse
FCFLAGS   += -march=pentium3
CCFLAGS   += -march=pentium3
endif

ifeq ($(CPU),pentiumm)
OPTFLAGS  += -mfpmath=mmx -mfpmath=sse -mfpmath=sse2
FCFLAGS   += -march=pentium-m
CCFLAGS   += -march=pentium-m
endif

ifeq ($(CPU),pentium4)
ifeq ($(CORE),northwood)
OPTFLAGS  += -mfpmath=mmx -mfpmath=sse -mfpmath=sse2
FCFLAGS   += -march=pentium4
CCFLAGS   += -march=pentium4
endif
ifeq ($(CORE),prescott)
OPTFLAGS  += -mfpmath=mmx -mfpmath=sse -mfpmath=sse2 -mfpmath=sse3
FCFLAGS   += -march=prescott
CCFLAGS   += -march=prescott
endif
endif

ifeq ($(CPU),core)
OPTFLAGS  += -mfpmath=mmx -mfpmath=sse -mfpmath=sse2
FCFLAGS   += -march=pentium-m
CCFLAGS   += -march=pentium-m
endif

ifeq ($(CPU),core2)
OPTFLAGS  += -mfpmath=mmx -mfpmath=sse -mfpmath=sse2
FCFLAGS   += -march=pentium-m
CCFLAGS   += -march=pentium-m
endif
endif


########################################################################
# Intel /w Intel compiler
########################################################################

ifeq ($(call match,$(ID),pc-(pentium?.?|core?.?)-linux-ifc),yes)
CC=icc
FC=ifort
AR=xiar
OPTFLAGS  = -O3 -ipo
FCFLAGS   = -cm -fpe0 -vec-report0 -module $(MODDIR)
CCFLAGS   = -vec-report0
LDFLAGS   = -lsvml
BLASLIB   = 
LAPACKLIB = 
GENERIC   = 0

# Try to find more sophisticated compiler settings
ifeq ($(CPU),pentium3)
OPTFLAGS  += -xK
endif

ifeq ($(CPU),pentium4)
ifeq ($(CORE),northwood)
OPTFLAGS  += -xN
endif
ifeq ($(CORE),prescott)
OPTFLAGS  += -xP
endif
endif

ifeq ($(CPU),pentiumm)
OPTFLAGS  += -xB
endif

ifeq ($(CPU),core)
OPTFLAGS  += -xP
endif

ifeq ($(CPU),core2)
OPTFLAGS  += -xT
endif
endif
