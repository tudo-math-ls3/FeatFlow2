#							-*- shell-script -*-
#
# Copyright by the Board of Trustees of the University of Illinois.
# All rights reserved.
#
# This file is part of HDF5.  The full HDF5 copyright notice, including
# terms governing use, modification, and redistribution, is contained in
# the files COPYING and Copyright.html.  COPYING can be found at the root
# of the source code distribution tree; Copyright.html can be found at the
# root level of an installed copy of the electronic HDF5 document set and
# is linked from the top-level documents page.  It can also be found at
# http://hdf.ncsa.uiuc.edu/HDF5/doc/Copyright.html.  If you do not have
# access to either file, you may request a copy from hdfhelp@ncsa.uiuc.edu.


# This file is part of the HDF5 build script.  It is processed shortly
# after configure starts and defines, among other things, flags for
# the various compile modes.
#
# See BlankForm in this directory for details.

# This is for the ASCI RED TFLOPS machine

# The default compiler is `cicc'
if test "X-" =  "X-$CC"; then
    CC=cicc
    CC_BASENAME=cicc
fi

# The default archiver is `xar'
AR=${AR:-xar}

# There is no ranlib
RANLIB=:

# Additional libraries
LDFLAGS="$LDFLAGS -lnoop_stubs"

# How to run serial and parallel test programs
RUNSERIAL="yod -sz 1"
RUNPARALLEL="yod -sz 8"

# What must *always* be present for things to compile correctly?
#CPPFLAGS="$CPPFLAGS -I."

# What compiler flags should be used for code development?
DEBUG_CFLAGS=-g
DEBUG_CPPFLAGS=

# What compiler flags should be used for building a production
# library?
PROD_CFLAGS=-O
PROD_CPPFLAGS=

# What compiler flags enable code profiling?
PROFILE_CFLAGS=-pg
PROFILE_CPPFLAGS=

# Turn off shared lib option.  It does not work for TFLOPS yet.
enable_shared="${enable_shared:-no}"

# Set this to the width required by printf() to print type `long
# long'.  For instance, if the format would be `%lld' then set it to
# `ll' or if the format would be `%qd' set it to `q'.
hdf5_cv_printf_ll=${hdf5_cv_printf_ll='ll'}

# Hard set sizeof_intN_t to 0 because they are not supported.
ac_cv_sizeof_int8_t=${ac_cv_sizeof_int8_t='0'}
ac_cv_sizeof_int16_t=${ac_cv_sizeof_int16_t='0'}
ac_cv_sizeof_int32_t=${ac_cv_sizeof_int32_t='0'}
ac_cv_sizeof_int64_t=${ac_cv_sizeof_int64_t='0'}
ac_cv_sizeof_uint8_t=${ac_cv_sizeof_uint8_t='0'}
ac_cv_sizeof_uint16_t=${ac_cv_sizeof_uint16_t='0'}
ac_cv_sizeof_uint32_t=${ac_cv_sizeof_uint32_t='0'}
ac_cv_sizeof_uint64_t=${ac_cv_sizeof_uint64_t='0'}

# Hard set sizeof_int_leastN_t to 0 because they are not supported.
ac_cv_sizeof_int_least8_t=${ac_cv_sizeof_int_least8_t='0'}
ac_cv_sizeof_int_least16_t=${ac_cv_sizeof_int_least16_t='0'}
ac_cv_sizeof_int_least32_t=${ac_cv_sizeof_int_least32_t='0'}
ac_cv_sizeof_int_least64_t=${ac_cv_sizeof_int_least64_t='0'}
ac_cv_sizeof_uint_least8_t=${ac_cv_sizeof_uint_least8_t='0'}
ac_cv_sizeof_uint_least16_t=${ac_cv_sizeof_uint_least16_t='0'}
ac_cv_sizeof_uint_least32_t=${ac_cv_sizeof_uint_least32_t='0'}
ac_cv_sizeof_uint_least64_t=${ac_cv_sizeof_uint_least64_t='0'}

# Hard set sizeof_int_fastN_t to 0 because they are not supported.
ac_cv_sizeof_int_fast8_t=${ac_cv_sizeof_int_fast8_t='0'}
ac_cv_sizeof_int_fast16_t=${ac_cv_sizeof_int_fast16_t='0'}
ac_cv_sizeof_int_fast32_t=${ac_cv_sizeof_int_fast32_t='0'}
ac_cv_sizeof_int_fast64_t=${ac_cv_sizeof_int_fast64_t='0'}
ac_cv_sizeof_uint_fast8_t=${ac_cv_sizeof_uint_fast8_t='0'}
ac_cv_sizeof_uint_fast16_t=${ac_cv_sizeof_uint_fast16_t='0'}
ac_cv_sizeof_uint_fast32_t=${ac_cv_sizeof_uint_fast32_t='0'}
ac_cv_sizeof_uint_fast64_t=${ac_cv_sizeof_uint_fast64_t='0'}

