#-----------------------------------------------------
# This is the data file for the LSFEM to solve 2D
# Navier-Stokes equations.
# This provides the general parameters involved in
# the whole solution process and the 
# pre/post processing steps.
# Each set of variables is categorized in a section 
# which is declared with capital letters between [].
#-----------------------------------------------------
# Mesh Parameters and Finite Element Types
#-----------------------------------------------------
[MESH]

# Mesh file name and path:
sFilenamePathMesh = './pre/QUAD'

# Final mesh level to solve the problem:
NLMAX = 6

# Coarse mesh level, used in multigrid:
NLMIN = 2

# Type of Pressure finite element:
Pelm = EL_Q1
Ptild = 0

# Perturbed grid percentage
#  =0.0 by default (No purturbation)
dPert = 0.0

# Type of 2D cubature rule for numerical integration
#   G3_2D            3-by-3 Gauss quadrature rule
#   G2_2D            2-by-2 Gauss quadrature rule
#   PG2X2            2-by-2 Piecewise Gauss quadrature rule
#   Standard(exact): G3_2D
ccubType = G3_2D

# Print mesh statistics or not
detPMesh = 0

# Print discretization statistics or not
detPDisc = 0

# Which variational setting?
#  = 0 Standard Galerkin
#  = 1 Least-squares FEM
detFEM = 1

# Shall we implement BCs.
detBCs = 0

#-----------------------------------------------------
# Jump Stabilization (Velocity, Vorticity)
#-----------------------------------------------------
[JUMP]

# Let's switch on if we need jump stabilization
#  First, we go to the velocities
#   detVJump =1 on, =0 off
detPJump = 0

# Relaxation parameter for Jump stabilisation.
# Standard value: 0.01
dJumpP = 0.01

# 2nd Relaxation parameter in the jump stabilisation. Standard = 0.0
dJumpStarP = 0.0

# Exponent for edge length weight in the jump stabilisation. Standard = 2
# (corresponds to a weight dJump*h^2).

deojEdgeExpP = 2.0

#-----------------------------------------------------
# Postprocessing the Results
#-----------------------------------------------------
[POST]

# Determine the export type, VTK or GMV
#   =0 VTK  used in paraview
#   =1 GMV  used in GMV
#   =2 Binary GMV
ExporType = 0

# Determine to write the final solution to a file.
#   =0 don't write  :(
#   =1 please write :)
detWriteResult = 1

# The file name and path to write the solution
#  ONLY applicable if detWriteResult = 1
sFilenamePathResult = './files/ali.dat'

# The level to write the final solution, and
#   for the moment it is only the NLMAX
#   ONLY applicable if detWriteResult = 1
iinitialSolutionLevel = 3

#-----------------------------------------------------
# Time-dependent problems
# We solve the problem for t=(t0, T).
#-----------------------------------------------------
[TIME]

# The \theta-scheme parameter
#   =0.0   Fully explicit, forward Euler
#   =1.0   Fully implicit, backward Euler
#   =0.5   Crank-Nicolson
dTheta = 0.5

# Time step size \nabla t
dTimeStep = 0.005

# Number of time steps
NMaxTime = 100

# Scaling parameter for re-initialization
mbb = 1.0

# Max number of re-initialization loop iterations
RI_MAX = 4

# Type of re-initialization
#  = 0 adaptive, based on the ||grad(\phi)||_{L_2}
#      norm value
#  = 1 manual, every 'reini_freq' iterations
reiType = 1

# Re-initialization frequency
#  applicable ONLY if 'reiType==1'
reini_freq = 10000